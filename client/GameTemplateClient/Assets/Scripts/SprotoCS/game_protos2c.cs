// Generated by sprotodump. DO NOT EDIT!
// source: game_protos2c.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType { 
	public class aoi_add {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private character_aoi _character; // tag 0
			public character_aoi character {
				get { return _character; }
				set { base.has_field.set_field (0, true); _character = value; }
			}
			public bool HasCharacter {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.character = base.deserialize.read_obj<character_aoi> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.character, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _wantmore; // tag 0
			public bool wantmore {
				get { return _wantmore; }
				set { base.has_field.set_field (0, true); _wantmore = value; }
			}
			public bool HasWantmore {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.wantmore = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.wantmore, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class aoi_remove {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _character; // tag 0
			public Int64 character {
				get { return _character; }
				set { base.has_field.set_field (0, true); _character = value; }
			}
			public bool HasCharacter {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.character = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.character, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class aoi_update_attribute {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private character_aoi_attribute _character; // tag 0
			public character_aoi_attribute character {
				get { return _character; }
				set { base.has_field.set_field (0, true); _character = value; }
			}
			public bool HasCharacter {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.character = base.deserialize.read_obj<character_aoi_attribute> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.character, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _wantmore; // tag 0
			public bool wantmore {
				get { return _wantmore; }
				set { base.has_field.set_field (0, true); _wantmore = value; }
			}
			public bool HasWantmore {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.wantmore = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.wantmore, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class aoi_update_move {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private character_aoi_move _character; // tag 0
			public character_aoi_move character {
				get { return _character; }
				set { base.has_field.set_field (0, true); _character = value; }
			}
			public bool HasCharacter {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.character = base.deserialize.read_obj<character_aoi_move> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.character, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _wantmore; // tag 0
			public bool wantmore {
				get { return _wantmore; }
				set { base.has_field.set_field (0, true); _wantmore = value; }
			}
			public bool HasWantmore {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.wantmore = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.wantmore, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class aoi_update_move_full {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private movementfull _movefull; // tag 0
			public movementfull movefull {
				get { return _movefull; }
				set { base.has_field.set_field (0, true); _movefull = value; }
			}
			public bool HasMovefull {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.movefull = base.deserialize.read_obj<movementfull> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.movefull, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _wantmore; // tag 0
			public bool wantmore {
				get { return _wantmore; }
				set { base.has_field.set_field (0, true); _wantmore = value; }
			}
			public bool HasWantmore {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.wantmore = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.wantmore, 0);
				}

				return base.serialize.close ();
			}
		}


	}


}

