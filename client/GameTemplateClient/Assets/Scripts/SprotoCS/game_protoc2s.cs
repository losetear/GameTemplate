// Generated by sprotodump. DO NOT EDIT!
// source: game_protoc2s.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType { 
	public class character_create {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private general _character; // tag 0
			public general character {
				get { return _character; }
				set { base.has_field.set_field (0, true); _character = value; }
			}
			public bool HasCharacter {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.character = base.deserialize.read_obj<general> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.character, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private character_overview _character; // tag 0
			public character_overview character {
				get { return _character; }
				set { base.has_field.set_field (0, true); _character = value; }
			}
			public bool HasCharacter {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _errno; // tag 1
			public Int64 errno {
				get { return _errno; }
				set { base.has_field.set_field (1, true); _errno = value; }
			}
			public bool HasErrno {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.character = base.deserialize.read_obj<character_overview> ();
						break;
					case 1:
						this.errno = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.character, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.errno, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class character_list {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Dictionary<Int64, character_overview> _character; // tag 0
			public Dictionary<Int64, character_overview> character {
				get { return _character; }
				set { base.has_field.set_field (0, true); _character = value; }
			}
			public bool HasCharacter {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.character = base.deserialize.read_map<Int64, character_overview>(v => v.id);
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.character, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class character_pick {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private character _character; // tag 0
			public character character {
				get { return _character; }
				set { base.has_field.set_field (0, true); _character = value; }
			}
			public bool HasCharacter {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _errno; // tag 1
			public Int64 errno {
				get { return _errno; }
				set { base.has_field.set_field (1, true); _errno = value; }
			}
			public bool HasErrno {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.character = base.deserialize.read_obj<character> ();
						break;
					case 1:
						this.errno = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.character, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.errno, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class combat {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _target; // tag 0
			public Int64 target {
				get { return _target; }
				set { base.has_field.set_field (0, true); _target = value; }
			}
			public bool HasTarget {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.target = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.target, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _target; // tag 0
			public Int64 target {
				get { return _target; }
				set { base.has_field.set_field (0, true); _target = value; }
			}
			public bool HasTarget {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _damage; // tag 1
			public Int64 damage {
				get { return _damage; }
				set { base.has_field.set_field (1, true); _damage = value; }
			}
			public bool HasDamage {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.target = base.deserialize.read_integer ();
						break;
					case 1:
						this.damage = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.target, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.damage, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class fullmove {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private movementfull _move; // tag 0
			public movementfull move {
				get { return _move; }
				set { base.has_field.set_field (0, true); _move = value; }
			}
			public bool HasMove {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.move = base.deserialize.read_obj<movementfull> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.move, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private position _pos; // tag 0
			public position pos {
				get { return _pos; }
				set { base.has_field.set_field (0, true); _pos = value; }
			}
			public bool HasPos {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.pos = base.deserialize.read_obj<position> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.pos, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class move {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private position _pos; // tag 0
			public position pos {
				get { return _pos; }
				set { base.has_field.set_field (0, true); _pos = value; }
			}
			public bool HasPos {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.pos = base.deserialize.read_obj<position> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.pos, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private position _pos; // tag 0
			public position pos {
				get { return _pos; }
				set { base.has_field.set_field (0, true); _pos = value; }
			}
			public bool HasPos {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.pos = base.deserialize.read_obj<position> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.pos, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class syncclientlag {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _clienttime; // tag 0
			public Int64 clienttime {
				get { return _clienttime; }
				set { base.has_field.set_field (0, true); _clienttime = value; }
			}
			public bool HasClienttime {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.clienttime = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.clienttime, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _clienttime; // tag 0
			public Int64 clienttime {
				get { return _clienttime; }
				set { base.has_field.set_field (0, true); _clienttime = value; }
			}
			public bool HasClienttime {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.clienttime = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.clienttime, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class syncserverlag {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _ping; // tag 0
			public Int64 ping {
				get { return _ping; }
				set { base.has_field.set_field (0, true); _ping = value; }
			}
			public bool HasPing {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ping = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.ping, 0);
				}

				return base.serialize.close ();
			}
		}


	}


}

